class CmcChart{debounce(func){var timer;return function(event){if(timer)clearTimeout(timer);timer=setTimeout(func,100,event);};}

formatCoinCap(val){if(val==0){return '0';}
if(val>=1000000000000){return '$'+(Math.round(val/10000000000)/100)+'T';}
if(val>=100000000){return '$'+(Math.round(val/10000000)/100)+'B';}
if(val<0){if(val<=-1000000000000){return '-$'+Math.abs(Math.round(val/10000000000)/100)+'T';}
if(val<=-100000000){return '-$'+Math.abs(Math.round(val/10000000)/100)+'B';}}
return '$'+(Math.round(val/10000)/100)+'M';}

loadConfig(){if(typeof this.dateFormat=='undefined'){this.dateFormat='dmy';}
this.granularity=1;this.posX=0;this.posXMargin=60;this.posYMargin=50;this.posXChartMargin=0;this.height=this.chart.clientHeight-this.posYMargin-80;this.width=this.chart.clientWidth-this.posXMargin-5;this.chartMetaData={};this.months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];if(typeof this.buildChartType!='undefined'){if(this.buildChartType=="line-chart"){this.buildChartContent=this.buildLineChartContent;}
if(this.buildChartType=="bar-chart"){this.buildChartContent=this.buildBarChartContent;if(typeof this.zeroLineClass=='undefined'){this.zeroLineClass='';}
this.rectWidth=Math.round(((this.width-this.posXMargin)/2)/this.data.length);if(this.rectWidth<1){this.rectWidth=1;}
this.posXChartMargin=this.rectWidth/2;}}else{this.buildChartContent=this.buildLineChartContent;}
if(typeof this.zeroLineClass=='undefined'){this.zeroLineClass='zero-line';}}
buildBarChartContent(){var rectangles="";for(var key in this.data){var entry=this.data[key];var date;var val;if(typeof entry["d"]=='undefined'){date=Date.parse(key+"-01-01")/1000;val=this.data[key];}else{date=entry["d"];if(typeof entry["m"]!='undefined'){val=entry["m"]*100000;}else if(typeof entry["v"]!='undefined'){val=entry["v"];}}
if(date>=this.dateMin){this.posX=Math.round(((date-this.dateMin)*(this.width-this.posXChartMargin*2))/(this.dateMax-this.dateMin))+this.posXMargin+this.posXChartMargin;}
this.posY=this.height-Math.round(((val-this.valMin)*this.height)/(this.valDiff))+this.posYMargin;var posYRectStart=this.posY;if(typeof this.zeroLineYpos!='undefined'){if(this.posY<=this.zeroLineYpos){var rectHeight=this.zeroLineYpos-this.posY;}else{posYRectStart=this.zeroLineYpos;var rectHeight=this.posY-this.zeroLineYpos;}}else{var rectHeight=(this.posYMargin+this.height)-this.posY;}
rectangles=rectangles.concat('<rect class="chart-bar" x="'+(this.posX-this.rectWidth/2)+'" y="'+posYRectStart+'" width="'+this.rectWidth+'" height="'+rectHeight+'" rx="1" />');this.chartMetaData[this.posX]={"y":this.posY,"d":date,"m":val};val=val/100000;}
return rectangles;}
buildLineChartContent(){var isFirstPass=true;var sparklineFill="";var sparkline="";for(var key in this.data){var entry=this.data[key];var date;var val;if(typeof entry["d"]=='undefined'){date=Date.parse(key+"-01-01")/1000;val=this.data[key];}else{date=entry["d"];if(typeof entry["m"]!='undefined'){val=entry["m"]*100000;}else if(typeof entry["v"]!='undefined'){val=entry["v"];}}
if(date>=this.dateMin){this.posX=Math.round(((date-this.dateMin)*this.width)/(this.dateMax-this.dateMin))+this.posXMargin;}
this.posY=this.height-Math.round(((val-this.valMin)*this.height)/(this.valDiff))+this.posYMargin;if(this.posX==0){if(isFirstPass){sparklineFill='M'+(this.posXMargin-2)+','+(this.posYMargin+this.height)+' ';sparkline="M";}else{sparkline="L";}
sparkline=sparkline.concat((this.posXMargin-2)+","+this.posY);sparklineFill=sparklineFill.concat((this.posXMargin-2)+","+this.posY);}else{if(isFirstPass){sparklineFill='M'+(this.posXMargin-2)+','+(this.posYMargin+this.height)+' ';sparkline="M";}else{sparkline=sparkline.concat(" L");sparklineFill=sparklineFill.concat(" L");}
sparkline=sparkline.concat(this.posX+","+this.posY);sparklineFill=sparklineFill.concat(this.posX+","+this.posY);}
this.chartMetaData[this.posX]={"y":this.posY,"d":date,"m":val};val=val/100000;isFirstPass=false;}
sparklineFill=sparklineFill.concat(' H'+(this.width+this.posXMargin+2)+' V'+(this.height+this.posYMargin));return '<path d="'+sparklineFill+'" class="chart-sparkline-fill" stroke-width="0" />'+
'<path d="'+sparkline+'" class="chart-sparkline" fill="none" stroke="orange" stroke-width="2px" />';}
drawDateLegend(){var dateLegend="";let difference=this.dateMax-this.dateMin;let totalDays=Math.ceil(difference/(3600*24));console.log('TotalDays: '+totalDays);if(totalDays>365){var yearStart=new Date(this.dateMin*1000).getFullYear();var yearEnd=new Date(this.dateMax*1000).getFullYear();var numberOfYears=yearEnd-yearStart;if(numberOfYears<=8){this.granularity=1;}else if(numberOfYears<=15){this.granularity=3;}else if(numberOfYears<=20){this.granularity=4;}else{this.granularity=5;}
for(var i=yearStart;i<=yearEnd;i++){var timestampYear=Date.parse(i+"-01-01")/1000;var linePosX=Math.round(((timestampYear-this.dateMin)*(this.width-this.posXChartMargin*2))/(this.dateMax-this.dateMin))+this.posXMargin;if(linePosX>this.posXMargin&&linePosX<this.width+this.posXMargin){if(i%this.granularity==0){dateLegend=dateLegend.concat('<text x="'+linePosX+'" y="'+(this.posYMargin+this.height+30)+'" text-anchor="middle" class="small">'+i+'</text>');}}}}else{var months=totalDays/30;if(months<=6){this.granularity=1;}else if(months<=12){this.granularity=3;}else if(months<=15){this.granularity=4;}else{this.granularity=5;}
var currentDateTimeStamp=this.dateMin;var i=0;while(currentDateTimeStamp<this.dateMax&&i<1000){var currentDate=new Date(currentDateTimeStamp*1000);var linePosX=Math.round(((currentDateTimeStamp-this.dateMin)*(this.width-this.posXChartMargin*2))/(this.dateMax-this.dateMin))+this.posXMargin;if(linePosX>this.posXMargin&&linePosX<this.width+this.posXMargin){if(i%this.granularity==0){dateLegend=dateLegend.concat('<text x="'+linePosX+'" y="'+(this.posYMargin+this.height+30)+'" text-anchor="middle" class="small">'+this.months[currentDate.getMonth()]+' '+currentDate.getFullYear()+'</text>');}}
currentDate.setMonth(currentDate.getMonth()+1);currentDateTimeStamp=currentDate.getTime()/1000;i++;}}
return dateLegend;}
buildChart(){this.valMax=0;this.loadConfig();this.loadChartPosition();if(typeof this.data==undefined||this.data.length==0){return;}
for(var key in this.data){var entry=this.data[key];var date;var val;if(typeof entry["d"]=='undefined'){date=Date.parse(key+"-01-01")/1000;val=this.data[key];}else{date=entry["d"];if(typeof entry["m"]!='undefined'){val=entry["m"]*100000;}else if(typeof entry["v"]!='undefined'){val=entry["v"];}}
if(typeof this.valMin=="undefined"){this.valMin=val;}else{if(parseInt(val)<this.valMin){this.valMin=parseInt(val);}}
if(typeof this.valMax=="undefined"){this.valMax=parseInt(val);}else{if(parseInt(val)>this.valMax){this.valMax=parseInt(val);}}
if(typeof this.dateMin=="undefined"){this.dateMin=date;}else{if(date<this.dateMin){this.dateMin=date;}}
if(typeof this.dateMax=="undefined"){this.dateMax=date;}else{if(date>this.dateMax){this.dateMax=date;}}}
var dateLinesForeground="";var dateLines="";dateLines=dateLines.concat(this.drawDateLegend());this.granularity=0;var i=1;this.valDiff=this.valMax-this.valMin;do{if(this.valDiff<=6*i){this.granularity=1*i;}else if(this.valDiff<=12*i){this.granularity=2*i;}else if(this.valDiff<=30*i){this.granularity=5*i;}
i=i*10;}while(this.granularity==0);this.valMax=this.valMax+this.granularity-(this.valMax%this.granularity);this.valDiff=this.valMax-this.valMin;for(i=this.valMin+(this.granularity-(this.valMin%this.granularity))-this.granularity;i<=this.valMax;i+=this.granularity){console.log("valMin:"+this.valMin);console.log("i:"+i);this.posY=this.height-Math.round(((i-this.valMin)*this.height)/(this.valDiff))+this.posYMargin;if(this.posY>=this.posYMargin&&this.posY<=this.height+this.posYMargin){if(i==0){dateLinesForeground=dateLinesForeground.concat('<line x1="'+this.posXMargin+'" y1="'+this.posY+'" y2="'+this.posY+'" x2="'+(this.posXMargin+this.width)+'" class="chart-line-horizontal '+this.zeroLineClass+'" />');dateLinesForeground=dateLinesForeground.concat('<text x="'+(this.posXMargin-10)+'" y="'+(this.posY+6)+'" class="small" text-anchor="end">0</text>');this.zeroLineYpos=this.posY;}else{dateLines=dateLines.concat('<rect x="'+this.posXMargin+'" y="'+this.posY+'" width="'+this.width+'" class="chart-line-horizontal" />');dateLines=dateLines.concat('<text x="'+(this.posXMargin-10)+'" y="'+(this.posY+6)+'" class="small" text-anchor="end">'+this.formatCursorValue(i)+'</text>');}}}
var chartContent=this.buildChartContent();var svg=dateLines+
''+
chartContent+
dateLinesForeground+
'<rect x="-100" y="'+this.posYMargin+'px" width="1px" height="'+this.height+'px" class="chart-cursor-line"></rect>'+
'<circle class="cursorCircleShadow" cx="-50" cy="-50" r="8" opacity="0.5" stroke-width="0" fill="orange" />'+
'<circle class="cursor-circle" cx="-50" cy="-50" r="5" stroke-width="1" fill="orange" />'+
'<text font-size="20" class="cursorText" x="0" y="'+(this.posYMargin-25)+'" text-anchor="middle"></text>'+
'<text class="cursorText2" x="0" y="'+(this.posYMargin-5)+'" text-anchor="middle"></text>'+
'';this.chart.innerHTML=svg;}
loadChart(chartElement,chartData){this.data=chartData;this.chart=chartElement;this.loadConfig();if(window.Event){document.captureEvents(Event.MOUSEMOVE);}
this.chart.addEventListener('mousemove',this.updateCursorXY.bind(this));this.chart.addEventListener('touchstart',this.updateCursorXY.bind(this));this.chart.addEventListener('touchmove',this.updateCursorXY.bind(this));this.chart.addEventListener('touchcancel',this.hideChartCursor.bind(this));this.chart.addEventListener('touchend',this.hideChartCursor.bind(this));if(typeof this.formatCursorValue=="undefined"){this.formatCursorValue=this.formatCoinCap;}
if(typeof this.formatCursorDate=="undefined"){this.formatCursorDate=this.formatCursorDateDefault;}
this.loadChartPosition();window.addEventListener('scroll',this.loadChartPosition.bind(this));window.addEventListener('resize',this.buildChart.bind(this));this.buildChart();}
loadChartPosition(){this.marketcapchartRect=this.chart.getBoundingClientRect();this.chartXStartMarged=this.posXMargin+this.marketcapchartRect.x-30;this.chartXEndMarged=this.posXMargin+this.width+this.marketcapchartRect.x+30;this.chartYStartMarged=this.posYMargin+this.marketcapchartRect.y-5;this.chartYEndMarged=this.posYMargin+this.height+this.marketcapchartRect.y+5;}
findNearestKey(needle,target){var previousK=0;for(var k in target){if(Math.abs(k-needle)>Math.abs(previousK-needle)){return previousK;}
previousK=k;}
return previousK;}
hideChartCursor(){this.chart.getElementsByClassName('cursorText')[0].setAttribute('x',-150);this.chart.getElementsByClassName('cursorText2')[0].setAttribute('x',-150);this.chart.getElementsByClassName('cursor-circle')[0].setAttribute('cx',-150);this.chart.getElementsByClassName('cursorCircleShadow')[0].setAttribute('cx',-150);this.chart.getElementsByClassName('chart-cursor-line')[0].setAttribute('x',-150);}
formatCursorDateDefault(date,dateFormat){if(dateFormat=='y'){return date.getFullYear();}else{return date.getDate()+' '+this.months[date.getMonth()]+' '+date.getFullYear();}}
updateCursorXY(event){var cursorX=event.clientX;var cursorY=event.clientY;if(typeof cursorX=="undefined"&&event.touches[0]!="undefined"){cursorX=event.touches[0].clientX;cursorY=event.touches[0].clientY;}
//console.log("cursor X:"+cursorX);
if(cursorX>this.chartXStartMarged&&cursorX<this.chartXEndMarged&&this.chartYStartMarged<cursorY&&this.chartYEndMarged>cursorY){var cursorTextElem=this.chart.getElementsByClassName('cursorText')[0];var cursorText2Elem=this.chart.getElementsByClassName('cursorText2')[0];var cursorTextBox=this.chart.getElementsByClassName('cursorTextBox')[0];var cursorCircle=this.chart.getElementsByClassName('cursor-circle')[0];var cursorCircleShadow=this.chart.getElementsByClassName('cursorCircleShadow')[0];var nearest=this.findNearestKey((cursorX-this.marketcapchartRect.x),this.chartMetaData);this.chart.getElementsByClassName('chart-cursor-line')[0].setAttribute('x',nearest);cursorCircle.setAttribute('cx',nearest);cursorCircle.setAttribute('cy',this.chartMetaData[nearest]['y']);cursorCircleShadow.setAttribute('cx',nearest);cursorCircleShadow.setAttribute('cy',this.chartMetaData[nearest]['y']);cursorTextElem.textContent=this.formatCursorValue(this.chartMetaData[nearest]['m']);var date=new Date(this.chartMetaData[nearest]['d']*1000);cursorText2Elem.textContent=this.formatCursorDate(date,this.dateFormat);var w1=(cursorTextElem.getBBox().width/2);var w2=(cursorText2Elem.getBBox().width/2);if(parseInt(nearest)-w1<this.posXMargin||parseInt(nearest)-w2<this.posXMargin){var biggestWidth=(w1>w2)?w1:w2;cursorTextElem.setAttribute('x',this.posXMargin+biggestWidth);cursorText2Elem.setAttribute('x',this.posXMargin+biggestWidth);}else if(parseInt(nearest)+w1>this.posXMargin+this.width||parseInt(nearest)+w2>this.posXMargin+this.width){var biggestWidth=(w1>w2)?w1:w2;cursorTextElem.setAttribute('x',this.posXMargin+this.width-biggestWidth);cursorText2Elem.setAttribute('x',this.posXMargin+this.width-biggestWidth);}else{cursorTextElem.setAttribute('x',nearest);cursorText2Elem.setAttribute('x',nearest);}}else{this.hideChartCursor();}}}